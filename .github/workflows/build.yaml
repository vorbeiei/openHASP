name: Build branch

on:
  release:
    types: [published]
  push:
    branches:
      - master
    paths-ignore:
      - "**.md"
      - "**.yml"
      - "**.yaml"
  workflow_dispatch:

jobs:
  build_esp32:
    #runs-on: ubuntu-latest
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false
      matrix:
        environment:
          - out: adafruit
            env: "huzzah32-v2-featherwing-35"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache PlatformIO
        uses: actions/cache@v4
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      - name: Install Setuptools
        run: |
          pip install --upgrade setuptools
      - name: Enable ESP32 platforms from platformio_override-template.ini
        run: |
          sed 's/; user_setups\/esp32/user_setups\/esp32/g' platformio_override-template.ini > platformio_override.ini
      - name: List all files in current folder
        run: |
          ls -la
      - name: Cat platformio_override.ini
        run: |
          cat platformio_override.ini
      - name: Run PlatformIO
        run: pio run -e ${{ matrix.environment.env }}
      - name: Upload output file
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.environment.out }}
          path: build_output/firmware/*.*n
      ## Release only:
      - name: Zip artifact for deployment
        if: github.ref != 'refs/heads/master'
        run: |
          zip ${{ matrix.environment.out }}.zip build_output/firmware/*.bin -r
      - name: On Release, upload assets to that Release
        if: github.ref != 'refs/heads/master'
        uses: AButler/upload-release-assets@v3.0
        with:
          files: ${{ matrix.environment.out }}.zip
          repo-token: ${{ secrets.GITHUB_TOKEN }}
